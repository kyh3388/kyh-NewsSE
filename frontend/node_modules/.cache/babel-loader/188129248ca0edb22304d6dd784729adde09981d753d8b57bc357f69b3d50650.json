{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmm\\\\Desktop\\\\kyh-NewsSE\\\\NewsSE\\\\frontend\\\\src\\\\component\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './MainPage.css';\n\n/*************** 시간 표시를 위한 함수 ***************/\n// 현재 시간을 기준으로 1분전, 1시간전 이렇게 표시\n// 하루가 넘어가면 11.12 이렇게 당일 날짜로 표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatTimeDifference(pubDate) {\n  const publishedDate = new Date(pubDate);\n  const now = new Date();\n\n  // 날짜 비교를 위해 연/월/일을 각각 추출\n  const publishedYear = publishedDate.getFullYear();\n  const publishedMonth = publishedDate.getMonth();\n  const publishedDay = publishedDate.getDate();\n  const currentYear = now.getFullYear();\n  const currentMonth = now.getMonth();\n  const currentDay = now.getDate();\n\n  // 오늘 날짜인지 확인\n  if (publishedYear === currentYear && publishedMonth === currentMonth && publishedDay === currentDay) {\n    // 오늘 날짜면 시간 차이를 계산\n    const diffInMs = now - publishedDate;\n    const diffInMinutes = Math.floor(diffInMs / 60000);\n    if (diffInMinutes < 1) return '방금 전';\n    if (diffInMinutes < 60) return `${diffInMinutes}분 전`;\n    const diffInHours = Math.floor(diffInMinutes / 60);\n    return `${diffInHours}시간 전`;\n  } else {\n    // 오늘 날짜가 아니면 MM.DD 형식으로 표시\n    return `${publishedDate.getMonth() + 1}.${publishedDate.getDate()}`;\n  }\n}\n\n/********************************************/\n\n/********** HTML 엔터티 디코딩 및 태그 제거 함수 **********/\n// 추가된 함수: API 응답 데이터에서 HTML 엔터티를 디코딩\nfunction decodeHtmlEntities(str) {\n  const parser = new DOMParser();\n  return parser.parseFromString(str, 'text/html').documentElement.textContent;\n}\n\n// 추가된 함수: API 응답 데이터에서 HTML 태그를 제거\nfunction removeHtmlTags(str) {\n  return str.replace(/<[^>]+>/g, '');\n}\n\n/********************************************/\n\nfunction MainPage() {\n  _s();\n  const [news, setNews] = useState([]);\n  const [page, setPage] = useState(1); // 페이지 상태 추가\n  const displayCount = 36; // 한 번에 가져올 기사 수\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchHistory, setSearchHistory] = useState([]); // 검색 기록 관리\n  const [isSearchFocused, setIsSearchFocused] = useState(false); // 검색창 포커스 상태 추가\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // 1. 초기 로딩 시 로컬 스토리지에서 검색 기록 불러오기\n  useEffect(() => {\n    const storedHistory = JSON.parse(localStorage.getItem('searchHistory')) || [];\n    setSearchHistory(storedHistory);\n  }, []);\n\n  // 2. 뉴스 데이터 요청\n  const fetchNews = (currentPage, query) => {\n    const start = (currentPage - 1) * displayCount + 1; // 시작 인덱스 계산('기사 더보기')\n    const searchTerm = query && query.trim() !== '' ? query : '기사'; // query가 없으면 '기사'를 기본값으로 설정\n\n    axios.get(`http://localhost:8080/searchNews?query=${searchTerm}&display=36&start=${start}`).then(response => {\n      // API 응답 확인(items에 어떤 항목들이 있는지 확인)\n      //console.log('API 응답 데이터:', response.data);\n\n      // 응답 데이터의 pubDate를 처리하여 새로운 배열 생성\n      const processedNews = response.data.items.map(item => ({\n        ...item,\n        // 제목에서 HTML 엔터티 디코딩 및 태그 제거\n        title: decodeHtmlEntities(item.title),\n        // 내용에서 HTML 엔터티 디코딩 및 태그 제거\n        description: decodeHtmlEntities(item.description),\n        // 날짜를 사용자 친화적인 형식으로 변환\n        formattedPubDate: formatTimeDifference(item.pubDate) // pubDate 포맷 적용\n      }));\n\n      // 기존 데이터와 병합 및 중복 제거\n      setNews(prevNews => {\n        if (currentPage === 1) {\n          return processedNews; // 첫 페이지에서는 기존 데이터를 초기화\n        }\n        const combinedNews = [...prevNews, ...processedNews];\n\n        // 시간순 정렬\n        return combinedNews.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));\n      });\n    }).catch(error => {\n      console.error('Error fetching news:', error);\n    });\n  };\n\n  // 초기 화면 및 새로 고침\n  useEffect(() => {\n    const params = new URLSearchParams(location.search); // URL의 쿼리스트링을 파싱\n    const query = params.get('query'); // 'query' 파라미터가 없으면 기본값으로 '기사' 사용\n    if (!query) {\n      fetchNews(1, '기사'); // query가 없으면 '기사'로 요청\n    } else {\n      setSearchQuery(query); // 검색창 업데이트\n      fetchNews(1, query); // query 값으로 요청\n    }\n  }, [location.search]); // location.search가 변경될 때마다 실행\n\n  // 3. 검색 버튼 클릭 이벤트\n  const handleSearch = () => {\n    if (searchQuery.trim() === '') {\n      navigate('/');\n      return;\n    }\n\n    // 3-1. 검색 기록 저장\n    if (!searchHistory.includes(searchQuery)) {\n      const updatedHistory = [searchQuery, ...searchHistory.slice(0, 4)]; // 최대 5개 유지\n      setSearchHistory(updatedHistory);\n      localStorage.setItem('searchHistory', JSON.stringify(updatedHistory));\n    }\n    navigate(`?query=${encodeURIComponent(searchQuery.trim())}`);\n  };\n\n  // \"기사 더 보기\" 버튼을 누르면 페이지 증가\n  const handleLoadMore = () => {\n    const nextPage = page + 1; // 다음 페이지\n    setPage(nextPage); // 페이지 상태 업데이트\n    fetchNews(nextPage, searchQuery); // 현재 검색 중인 쿼리로 데이터 요청\n  };\n\n  // 5. URL 변경 감지 및 초기 데이터 로드\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const query = params.get('query');\n    if (!query) {\n      fetchNews(1, '기사');\n    } else {\n      setSearchQuery(query);\n      fetchNews(1, query);\n    }\n  }, [location.search]);\n\n  // 포커스 이벤트 핸들러\n  const handleFocus = () => {\n    setIsSearchFocused(true); // 포커스가 있으면 검색 기록 표시\n  };\n\n  // 포커스 해제 이벤트 핸들러\n  const handleBlur = () => {\n    setTimeout(() => setIsSearchFocused(false), 200); // 포커스 해제 후 검색 기록 숨기기 (200ms 딜레이)\n  };\n\n  /*************** 메인 페이지 출력 ***************/\n  // 배치(제목,시간,원문링크)\n  // \"기사 더보기\" 버튼\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainpage-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header-title\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          children: \"News SE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"search-button\",\n            onClick: handleSearch // 검색 버튼 클릭 시 handleSearch 호출\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-text\",\n            placeholder: \"\\uB274\\uC2A4 \\uAC80\\uC0C9\",\n            value: searchQuery // 입력값을 상태로 유지\n            ,\n            onChange: e => setSearchQuery(e.target.value) // 상태 업데이트\n            ,\n            onFocus: handleFocus // 포커스 시 검색 기록 표시\n            ,\n            onBlur: handleBlur // 포커스 해제 시 검색 기록 숨김\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-history\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: searchHistory.map((historyItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"history-item\",\n              onClick: () => {\n                setSearchQuery(historyItem); // 클릭된 검색어를 검색창에 입력\n                navigate(`?query=${encodeURIComponent(historyItem)}`); // 검색 결과 페이지로 이동\n                fetchNews(1, historyItem); // 첫 페이지 데이터 요청\n              },\n              style: {\n                cursor: 'pointer'\n              } // 클릭 가능하도록 스타일 추가\t\t            \n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: historyItem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-btn\",\n                onClick: e => {\n                  e.stopPropagation(); // 클릭 이벤트 전파 방지\n                  const updatedHistory = searchHistory.filter((_, i) => i !== index);\n                  setSearchHistory(updatedHistory);\n                  localStorage.setItem('searchHistory', JSON.stringify(updatedHistory));\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 22\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 18\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainpage-body\",\n      children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/extra-page\",\n          state: {\n            title: item.title,\n            pubDate: item.pubDate,\n            description: item.description,\n            link: item.link\n          },\n          style: {\n            textDecoration: 'none',\n            color: 'black',\n            fontWeight: 'bold'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.formattedPubDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: {\n            textDecoration: 'none',\n            color: 'blue'\n          },\n          children: \"\\uAE30\\uC0AC \\uC6D0\\uBB38 \\uBCF4\\uB7EC\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainpage-foot\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        children: \"\\uAE30\\uC0AC \\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 3\n  }, this);\n\n  // href : 하이퍼링크 연결\n  // target=\"blank\" : 새 탭에서 화면 열기\n  // rel=\"noopener noreferrer\" : 보안과 프라이버시 보호를 위해 새 탭에서 열린 페이지가 원래 페이지에 접근하지 못하게 하고, 원래 페이지의 참조 정보도 전달되지 않도록 한다\n  /********************************************/\n}\n_s(MainPage, \"kgXSs3sg5uSc4zV/DLLNTkiuy3M=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","formatTimeDifference","pubDate","publishedDate","Date","now","publishedYear","getFullYear","publishedMonth","getMonth","publishedDay","getDate","currentYear","currentMonth","currentDay","diffInMs","diffInMinutes","Math","floor","diffInHours","decodeHtmlEntities","str","parser","DOMParser","parseFromString","documentElement","textContent","removeHtmlTags","replace","MainPage","_s","news","setNews","page","setPage","displayCount","searchQuery","setSearchQuery","searchHistory","setSearchHistory","isSearchFocused","setIsSearchFocused","location","navigate","storedHistory","JSON","parse","localStorage","getItem","fetchNews","currentPage","query","start","searchTerm","trim","get","then","response","processedNews","data","items","map","item","title","description","formattedPubDate","prevNews","combinedNews","sort","a","b","catch","error","console","params","URLSearchParams","search","handleSearch","includes","updatedHistory","slice","setItem","stringify","encodeURIComponent","handleLoadMore","nextPage","handleFocus","handleBlur","setTimeout","className","children","href","style","textDecoration","color","fileName","_jsxFileName","lineNumber","columnNumber","position","type","onClick","placeholder","value","onChange","e","target","onFocus","onBlur","historyItem","index","cursor","stopPropagation","filter","_","i","to","state","link","fontWeight","rel","_c","$RefreshReg$"],"sources":["C:/Users/kimmm/Desktop/kyh-NewsSE/NewsSE/frontend/src/component/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './MainPage.css';\r\n\r\n/*************** 시간 표시를 위한 함수 ***************/\r\n// 현재 시간을 기준으로 1분전, 1시간전 이렇게 표시\r\n// 하루가 넘어가면 11.12 이렇게 당일 날짜로 표시\r\n\r\nfunction formatTimeDifference(pubDate) {\r\n    const publishedDate = new Date(pubDate);\r\n    const now = new Date();\r\n    \r\n    // 날짜 비교를 위해 연/월/일을 각각 추출\r\n    const publishedYear = publishedDate.getFullYear();\r\n    const publishedMonth = publishedDate.getMonth();\r\n    const publishedDay = publishedDate.getDate();\r\n\r\n    const currentYear = now.getFullYear();\r\n    const currentMonth = now.getMonth();\r\n    const currentDay = now.getDate();\r\n\r\n    // 오늘 날짜인지 확인\r\n    if (\r\n        publishedYear === currentYear &&\r\n        publishedMonth === currentMonth &&\r\n        publishedDay === currentDay\r\n    ) {\r\n        // 오늘 날짜면 시간 차이를 계산\r\n        const diffInMs = now - publishedDate;\r\n        const diffInMinutes = Math.floor(diffInMs / 60000);\r\n\r\n        if (diffInMinutes < 1) return '방금 전';\r\n        if (diffInMinutes < 60) return `${diffInMinutes}분 전`;\r\n\r\n        const diffInHours = Math.floor(diffInMinutes / 60);\r\n        return `${diffInHours}시간 전`;\r\n    } else {\r\n        // 오늘 날짜가 아니면 MM.DD 형식으로 표시\r\n        return `${publishedDate.getMonth() + 1}.${publishedDate.getDate()}`;\r\n    }\r\n}\r\n\r\n/********************************************/\r\n\r\n/********** HTML 엔터티 디코딩 및 태그 제거 함수 **********/\r\n// 추가된 함수: API 응답 데이터에서 HTML 엔터티를 디코딩\r\nfunction decodeHtmlEntities(str) {\r\n    const parser = new DOMParser();\r\n    return parser.parseFromString(str, 'text/html').documentElement.textContent;\r\n}\r\n\r\n// 추가된 함수: API 응답 데이터에서 HTML 태그를 제거\r\nfunction removeHtmlTags(str) {\r\n    return str.replace(/<[^>]+>/g, '');\r\n}\r\n\r\n/********************************************/\r\n\r\n\r\n\r\n\r\nfunction MainPage() {\r\n\t\r\n\tconst [news, setNews] = useState([]);\r\n\tconst [page, setPage] = useState(1); // 페이지 상태 추가\r\n\tconst displayCount = 36; // 한 번에 가져올 기사 수\r\n\tconst [searchQuery, setSearchQuery] = useState('');\r\n\tconst [searchHistory, setSearchHistory] = useState([]); // 검색 기록 관리\r\n\tconst [isSearchFocused, setIsSearchFocused] = useState(false); // 검색창 포커스 상태 추가\r\n\tconst location = useLocation();\r\n\tconst navigate = useNavigate();\r\n\t\r\n\t// 1. 초기 로딩 시 로컬 스토리지에서 검색 기록 불러오기\r\n    useEffect(() => {\r\n        const storedHistory = JSON.parse(localStorage.getItem('searchHistory')) || [];\r\n        setSearchHistory(storedHistory);\r\n    }, []);\r\n\t\r\n\t// 2. 뉴스 데이터 요청\r\n\tconst fetchNews = (currentPage, query) => {\r\n\t\t\r\n\t\tconst start = (currentPage - 1) * displayCount + 1; // 시작 인덱스 계산('기사 더보기')\r\n\t\tconst searchTerm = query && query.trim() !== '' ? query : '기사'; // query가 없으면 '기사'를 기본값으로 설정\r\n\t\r\n\t\taxios\r\n\t\t\t.get(`http://localhost:8080/searchNews?query=${searchTerm}&display=36&start=${start}`)\r\n\t\t\t.then((response) => {\r\n\t\t\t\t// API 응답 확인(items에 어떤 항목들이 있는지 확인)\r\n\t\t\t\t//console.log('API 응답 데이터:', response.data);\r\n\t\t\t\t\r\n\t\t\t\t// 응답 데이터의 pubDate를 처리하여 새로운 배열 생성\r\n\t\t\t\tconst processedNews = response.data.items.map((item) => ({\r\n                \t...item,\r\n                \t\r\n                \t// 제목에서 HTML 엔터티 디코딩 및 태그 제거\r\n                    title: decodeHtmlEntities(item.title),\r\n                    // 내용에서 HTML 엔터티 디코딩 및 태그 제거\r\n                    description: decodeHtmlEntities(item.description),\r\n                    // 날짜를 사용자 친화적인 형식으로 변환\r\n                \tformattedPubDate: formatTimeDifference(item.pubDate), // pubDate 포맷 적용\r\n            \t}));\r\n\r\n                // 기존 데이터와 병합 및 중복 제거\r\n            setNews((prevNews) => {\r\n\t\t\t\tif (currentPage === 1) {\r\n       \t\t\t\treturn processedNews; // 첫 페이지에서는 기존 데이터를 초기화\r\n    \t\t\t}\r\n                const combinedNews = [...prevNews, ...processedNews];\r\n                \r\n                // 시간순 정렬\r\n                return combinedNews.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));\r\n            });\r\n        })\r\n            .catch(error => {\r\n                console.error('Error fetching news:', error);\r\n            });\r\n    };\r\n    \r\n\t// 초기 화면 및 새로 고침\r\n    useEffect(() => {\r\n\t\tconst params = new URLSearchParams(location.search); // URL의 쿼리스트링을 파싱\r\n\t\tconst query = params.get('query'); // 'query' 파라미터가 없으면 기본값으로 '기사' 사용\r\n\t\tif (!query) {\r\n            fetchNews(1, '기사'); // query가 없으면 '기사'로 요청\r\n        } else {\r\n            setSearchQuery(query); // 검색창 업데이트\r\n            fetchNews(1, query); // query 값으로 요청\r\n        }\r\n    }, [location.search]);  // location.search가 변경될 때마다 실행\r\n\t\r\n    // 3. 검색 버튼 클릭 이벤트\r\n    const handleSearch = () => {\r\n        if (searchQuery.trim() === '') {\r\n            navigate('/');\r\n            return;\r\n        }\r\n\r\n        // 3-1. 검색 기록 저장\r\n        if (!searchHistory.includes(searchQuery)) {\r\n            const updatedHistory = [searchQuery, ...searchHistory.slice(0, 4)]; // 최대 5개 유지\r\n            setSearchHistory(updatedHistory);\r\n            localStorage.setItem('searchHistory', JSON.stringify(updatedHistory));\r\n        }\r\n\r\n        navigate(`?query=${encodeURIComponent(searchQuery.trim())}`);\r\n    };\r\n    \r\n\t// \"기사 더 보기\" 버튼을 누르면 페이지 증가\r\n\tconst handleLoadMore = () => {\r\n\t\tconst nextPage = page + 1; // 다음 페이지\r\n        setPage(nextPage); // 페이지 상태 업데이트\r\n        fetchNews(nextPage, searchQuery); // 현재 검색 중인 쿼리로 데이터 요청\r\n\t};\r\n\t\r\n\t// 5. URL 변경 감지 및 초기 데이터 로드\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(location.search);\r\n        const query = params.get('query');\r\n        if (!query) {\r\n            fetchNews(1, '기사');\r\n        } else {\r\n            setSearchQuery(query);\r\n            fetchNews(1, query);\r\n        }\r\n    }, [location.search]);\r\n    \r\n    \r\n    // 포커스 이벤트 핸들러\r\n\tconst handleFocus = () => {\r\n\t\tsetIsSearchFocused(true); // 포커스가 있으면 검색 기록 표시\r\n\t};\r\n\r\n\t// 포커스 해제 이벤트 핸들러\r\n\tconst handleBlur = () => {\r\n\t\tsetTimeout(() => setIsSearchFocused(false), 200); // 포커스 해제 후 검색 기록 숨기기 (200ms 딜레이)\r\n\t};\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\t\r\n/*************** 메인 페이지 출력 ***************/\r\n// 배치(제목,시간,원문링크)\r\n// \"기사 더보기\" 버튼\r\n\r\n\treturn (\r\n\t\t<div className=\"MainPage\"> \r\n\t\t\t<div className=\"mainpage-head\">\r\n\t\t\t\r\n\t\t\t\t<h1 className=\"header-title\">\r\n\t\t\t\t\t<a href='/'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextDecoration: 'none',\r\n\t\t\t\t\t\t\t\tcolor: 'black'\r\n\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t>News SE</a>\r\n\t\t\t\t</h1>\r\n\t\t\t\t\r\n\t\t\t\t{/* 부모 요소에 position: relative 적용 */}\r\n\t            <div style={{ position: 'relative' }}>\r\n\t                <div className=\"search-box\">\r\n\t                \t<button\r\n\t                        type=\"button\"\r\n\t                        className=\"search-button\"\r\n\t                        onClick={handleSearch} // 검색 버튼 클릭 시 handleSearch 호출\r\n\t                    />\r\n\t                    <input\r\n\t                        type=\"text\"\r\n\t                        className=\"search-text\"\r\n\t                        placeholder=\"뉴스 검색\"\r\n\t                        value={searchQuery} // 입력값을 상태로 유지\r\n     \t\t   \t\t\t\tonChange={(e) => setSearchQuery(e.target.value)} // 상태 업데이트\r\n\t                        onFocus={handleFocus} // 포커스 시 검색 기록 표시\r\n\t\t\t\t\t\t\tonBlur={handleBlur} // 포커스 해제 시 검색 기록 숨김\r\n\t                    />\r\n\t                    \r\n\t                </div>\r\n\t\t\t\t\r\n\t\t\t\t\t{/* 검색 기록 표시 */}\r\n\t\t\t\t\t<div className=\"search-history\">\r\n\t\t\t\t\t    <ul>\r\n\t\t\t\t\t        {searchHistory.map((historyItem, index) => (\r\n\t\t\t\t\t            <li\r\n\t\t\t\t\t            \tkey={index}\r\n\t\t\t\t\t            \tclassName=\"history-item\"\r\n\t\t\t\t\t            \tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetSearchQuery(historyItem); // 클릭된 검색어를 검색창에 입력\r\n\t\t\t\t\t                    navigate(`?query=${encodeURIComponent(historyItem)}`); // 검색 결과 페이지로 이동\r\n\t\t\t\t\t                    fetchNews(1, historyItem); // 첫 페이지 데이터 요청\r\n\t\t\t\t\t                }}\r\n\t\t\t\t\t                style={{ cursor: 'pointer' }} // 클릭 가능하도록 스타일 추가\t\t            \r\n\t\t\t\t\t            >\r\n\t\t\t\t\t            \r\n\t\t\t\t\t                <span>{historyItem}</span>\r\n\t\t\t\t\t                <button\r\n\t\t\t\t\t                    className=\"delete-btn\"\r\n\t\t\t\t\t                    onClick={(e) => {\r\n\t\t\t\t\t                        e.stopPropagation(); // 클릭 이벤트 전파 방지\r\n\t\t\t\t\t                        const updatedHistory = searchHistory.filter((_, i) => i !== index);\r\n\t\t\t\t\t                        setSearchHistory(updatedHistory);\r\n\t\t\t\t\t                        localStorage.setItem('searchHistory', JSON.stringify(updatedHistory));\r\n\t\t\t\t\t                    }}\r\n\t\t\t\t\t                >\r\n\t\t\t\t\t                    X\r\n\t\t\t\t\t                </button>\r\n\t\t\t\t\t            </li>\r\n\t\t\t\t\t        ))}\r\n\t\t\t\t\t    </ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"mainpage-body\">\r\n\t\t\t\t{news.map((item, index) => (\r\n\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t    to=\"/extra-page\"\r\n\t\t\t\t\t\t    state={{\r\n\t\t\t\t\t\t        title: item.title,\r\n\t\t\t\t\t\t        pubDate: item.pubDate,\r\n\t\t\t\t\t\t        description: item.description,\r\n\t\t\t\t\t\t        link: item.link,\r\n\t\t\t\t\t\t    }}\r\n\t\t\t\t\t\t    style={{\r\n\t\t\t\t\t\t\t\ttextDecoration: 'none',\r\n\t\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t    \r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t    <h2>{item.title}</h2>\r\n\t\t\t\t\t\t</Link>\r\n                        <p>{item.formattedPubDate}</p>\r\n                        <a\r\n                        \thref={item.link}\r\n                        \ttarget=\"_blank\"\r\n                        \trel=\"noopener noreferrer\"\r\n                        \tstyle={{ textDecoration: 'none', color: 'blue'}}\r\n                        >기사 원문 보러가기</a>\r\n                    </div>\r\n                ))}\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"mainpage-foot\">\r\n\t\t\t\t<button onClick={handleLoadMore}>기사 더보기</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n// href : 하이퍼링크 연결\r\n// target=\"blank\" : 새 탭에서 화면 열기\r\n// rel=\"noopener noreferrer\" : 보안과 프라이버시 보호를 위해 새 탭에서 열린 페이지가 원래 페이지에 접근하지 못하게 하고, 원래 페이지의 참조 정보도 전달되지 않도록 한다\r\n/********************************************/\r\n\t\r\n}\r\n\r\nexport default MainPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}