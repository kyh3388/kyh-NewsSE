{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmm\\\\Desktop\\\\kyh-NewsSE\\\\NewsSE\\\\frontend\\\\src\\\\component\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './MainPage.css';\n\n/*************** 시간 표시를 위한 함수 ***************/\n// 현재 시간을 기준으로 1분전, 1시간전 이렇게 표시\n// 하루가 넘어가면 11.12 이렇게 당일 날짜로 표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatTimeDifference(pubDate) {\n  const publishedDate = new Date(pubDate);\n  const now = new Date();\n\n  // 날짜 비교를 위해 연/월/일을 각각 추출\n  const publishedYear = publishedDate.getFullYear();\n  const publishedMonth = publishedDate.getMonth();\n  const publishedDay = publishedDate.getDate();\n  const currentYear = now.getFullYear();\n  const currentMonth = now.getMonth();\n  const currentDay = now.getDate();\n\n  // 오늘 날짜인지 확인\n  if (publishedYear === currentYear && publishedMonth === currentMonth && publishedDay === currentDay) {\n    // 오늘 날짜면 시간 차이를 계산\n    const diffInMs = now - publishedDate;\n    const diffInMinutes = Math.floor(diffInMs / 60000);\n    if (diffInMinutes < 1) return '방금 전';\n    if (diffInMinutes < 60) return `${diffInMinutes}분 전`;\n    const diffInHours = Math.floor(diffInMinutes / 60);\n    return `${diffInHours}시간 전`;\n  } else {\n    // 오늘 날짜가 아니면 MM.DD 형식으로 표시\n    return `${publishedDate.getMonth() + 1}.${publishedDate.getDate()}`;\n  }\n}\n\n/********************************************/\n\n/********** HTML 엔터티 디코딩 및 태그 제거 함수 **********/\n// 추가된 함수: API 응답 데이터에서 HTML 엔터티를 디코딩\nfunction decodeHtmlEntities(str) {\n  const parser = new DOMParser();\n  return parser.parseFromString(str, 'text/html').documentElement.textContent;\n}\n\n// 추가된 함수: API 응답 데이터에서 HTML 태그를 제거\nfunction removeHtmlTags(str) {\n  return str.replace(/<[^>]+>/g, '');\n}\n\n/********************************************/\n\nfunction MainPage() {\n  _s();\n  const [news, setNews] = useState([]);\n  const [page, setPage] = useState(1); // 페이지 상태 추가\n  const displayCount = 36; // 한 번에 가져올 기사 수\n  const [searchQuery, setSearchQuery] = useState('');\n  const fetchNews = (currentPage, query) => {\n    // API 요청 시 시작 인덱스 계산\n    const start = (currentPage - 1) * displayCount + 1; // 시작 인덱스 계산\n    const searchTerm = query && query.trim() !== '' ? query : '검색어'; // 검색어가 없으면 '검색어'를 기본값으로 설정\n\n    axios.get(`http://localhost:8080/searchNews?query=${searchTerm}&display=${displayCount}&start=${start}`).then(response => {\n      // API 응답 확인(items에 어떤 항목들이 있는지 확인)\n      //console.log('API 응답 데이터:', response.data);\n\n      // 응답 데이터의 pubDate를 처리하여 새로운 배열 생성\n      const processedNews = response.data.items.map(item => ({\n        ...item,\n        // 제목에서 HTML 엔터티 디코딩 및 태그 제거\n        title: removeHtmlTags(decodeHtmlEntities(item.title)),\n        // 내용에서 HTML 엔터티 디코딩 및 태그 제거\n        description: removeHtmlTags(decodeHtmlEntities(item.description)),\n        // 날짜를 사용자 친화적인 형식으로 변환\n        formattedPubDate: formatTimeDifference(item.pubDate) // pubDate 포맷 적용\n      }));\n\n      // 기존 데이터와 병합 및 중복 제거\n      setNews(prevNews => {\n        const combinedNews = [...prevNews, ...processedNews];\n        // 중복 제거 (item.link 또는 다른 고유 식별자로)\n        const uniqueNews = Array.from(new Map(combinedNews.map(item => [item.link, item])).values());\n        // 시간순 정렬\n        return uniqueNews.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));\n      });\n    }).catch(error => {\n      console.error('Error fetching news:', error);\n    });\n  };\n\n  // 초기 로드 시 기본 검색어로 API 호출\n  useEffect(() => {\n    fetchNews(1, '검색어'); // 초기 로드 시 '검색어' 사용\n  }, []);\n\n  // 검색 버튼 클릭 이벤트\n  const handleSearch = () => {\n    setNews([]); // 기존 뉴스 초기화\n    setPage(1); // 페이지 초기화\n    fetchNews(1, searchQuery.trim() || '검색어'); // 검색 수행, 빈 검색어는 '검색어'로 대체\n  };\n\n  // \"기사 더 보기\" 버튼을 누르면 페이지 증가\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  /*************** 메인 페이지 출력 ***************/\n  // 배치(제목,시간,원문링크)\n  // \"기사 더보기\" 버튼\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainpage-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header-title\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          children: \"News SE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-text\",\n          placeholder: \"\\uB274\\uC2A4 \\uAC80\\uC0C9\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value) // 입력된 값을 상태에 저장\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"search-button\",\n          onClick: handleSearch // 검색 버튼 클릭 시 handleSearch 호출\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainpage_body\",\n      children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/extra-page\",\n          state: {\n            title: item.title,\n            description: item.description,\n            link: item.link\n          },\n          style: {\n            textDecoration: 'none',\n            color: 'black',\n            fontWeight: 'bold'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.formattedPubDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: {\n            textDecoration: 'none',\n            color: 'blue'\n          },\n          children: \"\\uAE30\\uC0AC \\uC6D0\\uBB38 \\uBCF4\\uB7EC\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainpage_footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        children: \"\\uAE30\\uC0AC \\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 3\n  }, this);\n\n  // href : 하이퍼링크 연결\n  // target=\"blank\" : 새 탭에서 화면 열기\n  // rel=\"noopener noreferrer\" : 보안과 프라이버시 보호를 위해 새 탭에서 열린 페이지가 원래 페이지에 접근하지 못하게 하고, 원래 페이지의 참조 정보도 전달되지 않도록 한다\n  /********************************************/\n}\n_s(MainPage, \"bgsfobJ+Cl3njPne40njycSwmNg=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","formatTimeDifference","pubDate","publishedDate","Date","now","publishedYear","getFullYear","publishedMonth","getMonth","publishedDay","getDate","currentYear","currentMonth","currentDay","diffInMs","diffInMinutes","Math","floor","diffInHours","decodeHtmlEntities","str","parser","DOMParser","parseFromString","documentElement","textContent","removeHtmlTags","replace","MainPage","_s","news","setNews","page","setPage","displayCount","searchQuery","setSearchQuery","fetchNews","currentPage","query","start","searchTerm","trim","get","then","response","processedNews","data","items","map","item","title","description","formattedPubDate","prevNews","combinedNews","uniqueNews","Array","from","Map","link","values","sort","a","b","catch","error","console","handleSearch","handleLoadMore","prevPage","className","children","href","style","textDecoration","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","index","to","state","fontWeight","rel","_c","$RefreshReg$"],"sources":["C:/Users/kimmm/Desktop/kyh-NewsSE/NewsSE/frontend/src/component/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './MainPage.css';\r\n\r\n/*************** 시간 표시를 위한 함수 ***************/\r\n// 현재 시간을 기준으로 1분전, 1시간전 이렇게 표시\r\n// 하루가 넘어가면 11.12 이렇게 당일 날짜로 표시\r\n\r\nfunction formatTimeDifference(pubDate) {\r\n    const publishedDate = new Date(pubDate);\r\n    const now = new Date();\r\n    \r\n    // 날짜 비교를 위해 연/월/일을 각각 추출\r\n    const publishedYear = publishedDate.getFullYear();\r\n    const publishedMonth = publishedDate.getMonth();\r\n    const publishedDay = publishedDate.getDate();\r\n\r\n    const currentYear = now.getFullYear();\r\n    const currentMonth = now.getMonth();\r\n    const currentDay = now.getDate();\r\n\r\n    // 오늘 날짜인지 확인\r\n    if (\r\n        publishedYear === currentYear &&\r\n        publishedMonth === currentMonth &&\r\n        publishedDay === currentDay\r\n    ) {\r\n        // 오늘 날짜면 시간 차이를 계산\r\n        const diffInMs = now - publishedDate;\r\n        const diffInMinutes = Math.floor(diffInMs / 60000);\r\n\r\n        if (diffInMinutes < 1) return '방금 전';\r\n        if (diffInMinutes < 60) return `${diffInMinutes}분 전`;\r\n\r\n        const diffInHours = Math.floor(diffInMinutes / 60);\r\n        return `${diffInHours}시간 전`;\r\n    } else {\r\n        // 오늘 날짜가 아니면 MM.DD 형식으로 표시\r\n        return `${publishedDate.getMonth() + 1}.${publishedDate.getDate()}`;\r\n    }\r\n}\r\n\r\n/********************************************/\r\n\r\n/********** HTML 엔터티 디코딩 및 태그 제거 함수 **********/\r\n// 추가된 함수: API 응답 데이터에서 HTML 엔터티를 디코딩\r\nfunction decodeHtmlEntities(str) {\r\n    const parser = new DOMParser();\r\n    return parser.parseFromString(str, 'text/html').documentElement.textContent;\r\n}\r\n\r\n// 추가된 함수: API 응답 데이터에서 HTML 태그를 제거\r\nfunction removeHtmlTags(str) {\r\n    return str.replace(/<[^>]+>/g, '');\r\n}\r\n\r\n/********************************************/\r\n\r\n\r\n\r\n\r\n\r\nfunction MainPage() {\r\n\t\r\n\tconst [news, setNews] = useState([]);\r\n\tconst [page, setPage] = useState(1); // 페이지 상태 추가\r\n\tconst displayCount = 36; // 한 번에 가져올 기사 수\r\n\tconst [searchQuery, setSearchQuery] = useState('');\r\n\t\r\n\tconst fetchNews = (currentPage, query) => {\r\n\t\t// API 요청 시 시작 인덱스 계산\r\n\t\tconst start = (currentPage - 1) * displayCount + 1; // 시작 인덱스 계산\r\n\t\tconst searchTerm = query && query.trim() !== '' ? query : '검색어'; // 검색어가 없으면 '검색어'를 기본값으로 설정\r\n\t\r\n\t\taxios\r\n\t\t\t.get(`http://localhost:8080/searchNews?query=${searchTerm}&display=${displayCount}&start=${start}`)\r\n\t\t\t.then((response) => {\r\n\t\t\t\t// API 응답 확인(items에 어떤 항목들이 있는지 확인)\r\n\t\t\t\t//console.log('API 응답 데이터:', response.data);\r\n\t\t\t\t\r\n\t\t\t\t// 응답 데이터의 pubDate를 처리하여 새로운 배열 생성\r\n\t\t\t\tconst processedNews = response.data.items.map((item) => ({\r\n                \t...item,\r\n                \t\r\n                \t// 제목에서 HTML 엔터티 디코딩 및 태그 제거\r\n                    title: removeHtmlTags(decodeHtmlEntities(item.title)),\r\n                    // 내용에서 HTML 엔터티 디코딩 및 태그 제거\r\n                    description: removeHtmlTags(decodeHtmlEntities(item.description)),\r\n                    // 날짜를 사용자 친화적인 형식으로 변환\r\n                \tformattedPubDate: formatTimeDifference(item.pubDate), // pubDate 포맷 적용\r\n            \t}));\r\n\r\n                // 기존 데이터와 병합 및 중복 제거\r\n            setNews((prevNews) => {\r\n                const combinedNews = [...prevNews, ...processedNews];\r\n                // 중복 제거 (item.link 또는 다른 고유 식별자로)\r\n                const uniqueNews = Array.from(\r\n                    new Map(combinedNews.map((item) => [item.link, item])).values()\r\n                );\r\n                // 시간순 정렬\r\n                return uniqueNews.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));\r\n            });\r\n        })\r\n            .catch(error => {\r\n\t\t\t\t\r\n\t\t\t\t\r\n                console.error('Error fetching news:', error);\r\n            });\r\n    };\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\t\r\n\t// 초기 로드 시 기본 검색어로 API 호출\r\n    useEffect(() => {\r\n        fetchNews(1, '검색어'); // 초기 로드 시 '검색어' 사용\r\n    }, []);\r\n\r\n    // 검색 버튼 클릭 이벤트\r\n    const handleSearch = () => {\r\n        setNews([]); // 기존 뉴스 초기화\r\n        setPage(1); // 페이지 초기화\r\n        fetchNews(1, searchQuery.trim() || '검색어'); // 검색 수행, 빈 검색어는 '검색어'로 대체\r\n    };\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n\t\r\n\t// \"기사 더 보기\" 버튼을 누르면 페이지 증가\r\n\tconst handleLoadMore = () => {\r\n\t\tsetPage((prevPage) => prevPage + 1);\r\n\t};\r\n\t\r\n\t\r\n/*************** 메인 페이지 출력 ***************/\r\n// 배치(제목,시간,원문링크)\r\n// \"기사 더보기\" 버튼\r\n\r\n\treturn (\r\n\t\t<div className=\"MainPage\"> \r\n\t\t\t<div className=\"mainpage-header\">\r\n\t\t\t\t<h1 className=\"header-title\">\r\n\t\t\t\t\t<a href='/'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextDecoration: 'none',\r\n\t\t\t\t\t\t\t\tcolor: 'black'\r\n\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t>News SE</a>\r\n\t\t\t\t</h1>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"search-box\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"search-text\"\r\n\t\t\t\t\t\tplaceholder=\"뉴스 검색\"\r\n\t\t\t\t\t\tvalue={searchQuery}\r\n\t\t\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)} // 입력된 값을 상태에 저장\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"search-button\"\r\n\t\t\t\t\t\tonClick={handleSearch} // 검색 버튼 클릭 시 handleSearch 호출\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"mainpage_body\">\r\n\t\t\t\t{news.map((item, index) => (\r\n\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t    to=\"/extra-page\"\r\n\t\t\t\t\t\t    state={{\r\n\t\t\t\t\t\t        title: item.title,\r\n\t\t\t\t\t\t        description: item.description,\r\n\t\t\t\t\t\t        link: item.link,\r\n\t\t\t\t\t\t    }}\r\n\t\t\t\t\t\t    style={{\r\n\t\t\t\t\t\t\t\ttextDecoration: 'none',\r\n\t\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t    \r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t    <h2>{item.title}</h2>\r\n\t\t\t\t\t\t</Link>\r\n                        <p>{item.formattedPubDate}</p>\r\n                        <a\r\n                        \thref={item.link}\r\n                        \ttarget=\"_blank\"\r\n                        \trel=\"noopener noreferrer\"\r\n                        \tstyle={{ textDecoration: 'none', color: 'blue'}}\r\n                        >기사 원문 보러가기</a>\r\n                    </div>\r\n                ))}\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"mainpage_footer\">\r\n\t\t\t\t<button onClick={handleLoadMore}>기사 더보기</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n// href : 하이퍼링크 연결\r\n// target=\"blank\" : 새 탭에서 화면 열기\r\n// rel=\"noopener noreferrer\" : 보안과 프라이버시 보호를 위해 새 탭에서 열린 페이지가 원래 페이지에 접근하지 못하게 하고, 원래 페이지의 참조 정보도 전달되지 않도록 한다\r\n/********************************************/\r\n\t\r\n}\r\n\r\nexport default MainPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}