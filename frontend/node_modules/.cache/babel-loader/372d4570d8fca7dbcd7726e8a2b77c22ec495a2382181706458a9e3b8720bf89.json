{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmm\\\\Desktop\\\\kyh-NewsSE\\\\NewsSE\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// 시간 표시를 위한 함수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatTimeDifference(pubDate) {\n  const publishedDate = new Date(pubDate);\n  const now = new Date();\n  const diffInMs = now - publishedDate;\n  const diffInMinutes = Math.floor(diffInMs / 60000);\n  if (diffInMinutes < 1) return '방금 전';\n  if (diffInMinutes < 60) return `${diffInMinutes}분 전`;\n  const diffInHours = Math.floor(diffInMinutes / 60);\n  if (diffInHours < 24) return `${diffInHours}시간 전`;\n  return `${publishedDate.getMonth() + 1}.${publishedDate.getDate()}`;\n}\nfunction App() {\n  _s();\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8080/searchNews?query=검색어&display=36').then(response => {\n      console.log('API 응답 데이터:', response.data); // API 응답 확인(items에 어떤 항목들이 있는지 확인)\n      setNews(response.data.items); // 전체 JSON 응답에서 items 배열만 사용하겠다는 의미.\n    }).catch(error => {\n      console.error('Error fetching news:', error);\n    });\n  }, []);\n\n  /*************** 메인 페이지 출력 ***************/\n  // 배치(제목,시간,원문링크)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), \" \", formatTimeDifference(item.pubDate)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: item.link,\n        target: \"blank\",\n        rel: \"noopener noreferrer\",\n        children: \"\\uAE30\\uC0AC \\uC6D0\\uBB38 \\uBCF4\\uB7EC\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n\n  // href : 하이퍼링크 연결\n  // target=\"blank\" : 새 탭에서 화면 열기\n  // rel=\"noopener noreferrer\" : 보안과 프라이버시 보호를 위해 새 탭에서 열린 페이지가 원래 페이지에 접근하지 못하게 하고, 원래 페이지의 참조 정보도 전달되지 않도록 한다\n  /********************************************/\n}\n_s(App, \"z/85X+TkTtxCb0PBzmDGtQlYstQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","formatTimeDifference","pubDate","publishedDate","Date","now","diffInMs","diffInMinutes","Math","floor","diffInHours","getMonth","getDate","App","_s","news","setNews","get","then","response","console","log","data","items","catch","error","className","children","map","item","index","title","fileName","_jsxFileName","lineNumber","columnNumber","href","link","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/kimmm/Desktop/kyh-NewsSE/NewsSE/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\n\r\n// 시간 표시를 위한 함수\r\nfunction formatTimeDifference(pubDate) {\r\n    const publishedDate = new Date(pubDate);\r\n    const now = new Date();\r\n    const diffInMs = now - publishedDate;\r\n    const diffInMinutes = Math.floor(diffInMs / 60000);\r\n\r\n    if (diffInMinutes < 1) return '방금 전';\r\n    if (diffInMinutes < 60) return `${diffInMinutes}분 전`;\r\n\r\n    const diffInHours = Math.floor(diffInMinutes / 60);\r\n    if (diffInHours < 24) return `${diffInHours}시간 전`;\r\n\r\n    return `${publishedDate.getMonth() + 1}.${publishedDate.getDate()}`;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\tconst [news, setNews] = useState([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\taxios.get('http://localhost:8080/searchNews?query=검색어&display=36')\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('API 응답 데이터:', response.data); // API 응답 확인(items에 어떤 항목들이 있는지 확인)\r\n\t\t\tsetNews(response.data.items); // 전체 JSON 응답에서 items 배열만 사용하겠다는 의미.\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error fetching news:', error);\r\n\t\t});\r\n\t}, []);\r\n\t\r\n\t\r\n/*************** 메인 페이지 출력 ***************/\r\n// 배치(제목,시간,원문링크)\r\n\r\n\treturn (\r\n\t\t<div className=\"App\"> \r\n\t\t\t{news.map((item, index) => (\r\n\t\t\t\t<div key={index}>\t\t\t\t\r\n\t\t\t\t\t<h2>{item.title}</h2>\r\n\t\t\t\t\t<p><strong></strong> {formatTimeDifference(item.pubDate)}</p>\r\n\t\t\t\t\t<a href={item.link} target=\"blank\" rel=\"noopener noreferrer\">기사 원문 보러가기</a>\r\n                </div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n\r\n// href : 하이퍼링크 연결\r\n// target=\"blank\" : 새 탭에서 화면 열기\r\n// rel=\"noopener noreferrer\" : 보안과 프라이버시 보호를 위해 새 탭에서 열린 페이지가 원래 페이지에 접근하지 못하게 하고, 원래 페이지의 참조 정보도 전달되지 않도록 한다\r\n/********************************************/\r\n\t\r\n\t\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}