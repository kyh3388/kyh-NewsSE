{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmm\\\\Desktop\\\\kyh-NewsSE\\\\NewsSE\\\\frontend\\\\src\\\\component\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './MainPage.css';\n\n/*************** 시간 표시를 위한 함수 ***************/\n// 현재 시간을 기준으로 \"방금 전\", \"1분 전\", \"1시간 전\" 등 상대적 시간 표시\n// 하루가 넘어가면 MM.DD 형식으로 날짜를 표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatTimeDifference(pubDate) {\n  // 기사 게시 날짜를 Date 객체로 변환\n  const publishedDate = new Date(pubDate);\n  const now = new Date(); // 현재 시간\n\n  // 날짜 비교를 위해 게시 날짜와 현재 날짜의 연/월/일을 각각 추출\n  const publishedYear = publishedDate.getFullYear();\n  const publishedMonth = publishedDate.getMonth();\n  const publishedDay = publishedDate.getDate();\n  const currentYear = now.getFullYear();\n  const currentMonth = now.getMonth();\n  const currentDay = now.getDate();\n\n  // 오늘 날짜인지 확인\n  if (publishedYear === currentYear && publishedMonth === currentMonth && publishedDay === currentDay) {\n    // 오늘 날짜일 경우 시간 차이를 계산\n    const diffInMs = now - publishedDate; // 현재 시간과의 밀리초 단위 차이 계산\n    const diffInMinutes = Math.floor(diffInMs / 60000); // 분 단위로 변환\n\n    if (diffInMinutes < 1) return '방금 전'; // 1분 미만이면 \"방금 전\" 반환\n    if (diffInMinutes < 60) return `${diffInMinutes}분 전`; // 1시간 미만이면 \"N분 전\" 반환\n\n    const diffInHours = Math.floor(diffInMinutes / 60); // 시간 단위로 변환\n    return `${diffInHours}시간 전`; // \"N시간 전\" 반환\n  } else {\n    // 오늘 날짜가 아니면 MM.DD 형식으로 날짜를 반환\n    return `${publishedDate.getMonth() + 1}.${publishedDate.getDate()}`;\n  }\n}\n\n/********************************************/\n\n/*************** 메인 페이지 컴포넌트 ***************/\n// 메인 페이지는 기사 검색, 기사 리스트 표시, 더 보기 버튼 등의 기능을 포함\nfunction MainPage() {\n  _s();\n  // 뉴스 데이터를 저장할 상태\n  const [news, setNews] = useState([]);\n\n  // 현재 페이지를 저장할 상태 (기본값: 1)\n  const [page, setPage] = useState(1);\n\n  // 한 번에 가져올 기사 수\n  const displayCount = 36;\n\n  // 사용자가 입력한 검색어를 저장할 상태\n  const [searchQuery, setSearchQuery] = useState('');\n\n  /*************** 뉴스 데이터 가져오기 함수 ***************/\n  // 특정 페이지와 검색어를 기반으로 뉴스 데이터를 가져옴\n  const fetchNews = (currentPage, query) => {\n    // API 요청 시 시작 인덱스를 계산\n    const start = (currentPage - 1) * displayCount + 1;\n\n    // 검색어가 없으면 기본값으로 'default'를 사용\n    const searchTerm = query ? query : 'default';\n\n    // 뉴스 API 호출\n    axios.get(`http://localhost:8080/searchNews?query=${searchTerm}&display=${displayCount}&start=${start}`).then(response => {\n      // API 응답 데이터 확인 (디버깅용)\n      // console.log('API 응답 데이터:', response.data);\n\n      // 응답 데이터에서 pubDate를 포맷팅하여 새로운 배열 생성\n      const processedNews = response.data.items.map(item => ({\n        ...item,\n        formattedPubDate: formatTimeDifference(item.pubDate) // pubDate를 포맷팅하여 추가\n      }));\n\n      // 포맷팅된 데이터를 상태로 저장\n      setNews(processedNews);\n    }).catch(error => {\n      // API 호출 중 에러가 발생한 경우 콘솔에 출력\n      console.error('Error fetching news:', error);\n    });\n  };\n\n  /*************** 페이지 변경 및 검색어 변경 시 데이터 로드 ***************/\n  // 페이지 번호나 검색어가 변경될 때마다 fetchNews 호출\n  useEffect(() => {\n    fetchNews(page, searchQuery); // 검색어와 현재 페이지를 기반으로 데이터 요청\n  }, [page, searchQuery]);\n\n  /*************** 검색 버튼 클릭 이벤트 ***************/\n  // 검색 버튼을 클릭했을 때 호출\n  const handleSearch = () => {\n    setNews([]); // 기존 뉴스 데이터를 초기화\n    setPage(1); // 페이지를 초기화\n    const query = searchQuery.trim() === '' ? 'default' : searchQuery; // 검색어가 비어 있으면 기본값 'default'로 설정\n    fetchNews(1, query); // 검색 수행\n  };\n\n  /*************** 더 보기 버튼 클릭 이벤트 ***************/\n  // 더 보기 버튼 클릭 시 페이지 번호를 증가시켜 추가 데이터를 요청\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1); // 페이지 번호를 1 증가\n  };\n\n  /*************** 메인 페이지 렌더링 ***************/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainpage-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header-title\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          style: {\n            textDecoration: 'none',\n            // 링크에 밑줄을 제거\n            color: 'black' // 링크 텍스트 색상 설정\n          },\n          children: \"News SE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-text\" // 검색창 스타일 클래스\n          ,\n          placeholder: \"\\uB274\\uC2A4 \\uAC80\\uC0C9\" // 기본 텍스트\n          ,\n          value: searchQuery // 입력된 값을 상태와 동기화\n          ,\n          onChange: e => setSearchQuery(e.target.value) // 입력값 변경 시 상태 업데이트\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"search-button\" // 돋보기 버튼 스타일 클래스\n          ,\n          onClick: handleSearch // 클릭 시 handleSearch 호출\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainpage_body\",\n      children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/extra-page\" // 이동할 경로\n          ,\n          state: {\n            title: item.title,\n            // 기사 제목 전달\n            description: item.description,\n            // 기사 요약 전달\n            link: item.link // 기사 링크 전달\n          },\n          style: {\n            textDecoration: 'none',\n            // 밑줄 제거\n            color: 'black',\n            // 텍스트 색상\n            fontWeight: 'bold' // 굵은 글씨\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.formattedPubDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: {\n            textDecoration: 'none',\n            color: 'blue'\n          } // 스타일 설정\n          ,\n          children: \"\\uAE30\\uC0AC \\uC6D0\\uBB38 \\uBCF4\\uB7EC\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainpage_footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        children: \"\\uAE30\\uC0AC \\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n_s(MainPage, \"bgsfobJ+Cl3njPne40njycSwmNg=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","formatTimeDifference","pubDate","publishedDate","Date","now","publishedYear","getFullYear","publishedMonth","getMonth","publishedDay","getDate","currentYear","currentMonth","currentDay","diffInMs","diffInMinutes","Math","floor","diffInHours","MainPage","_s","news","setNews","page","setPage","displayCount","searchQuery","setSearchQuery","fetchNews","currentPage","query","start","searchTerm","get","then","response","processedNews","data","items","map","item","formattedPubDate","catch","error","console","handleSearch","trim","handleLoadMore","prevPage","className","children","href","style","textDecoration","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","index","to","state","title","description","link","fontWeight","rel","_c","$RefreshReg$"],"sources":["C:/Users/kimmm/Desktop/kyh-NewsSE/NewsSE/frontend/src/component/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './MainPage.css';\r\n\r\n/*************** 시간 표시를 위한 함수 ***************/\r\n// 현재 시간을 기준으로 \"방금 전\", \"1분 전\", \"1시간 전\" 등 상대적 시간 표시\r\n// 하루가 넘어가면 MM.DD 형식으로 날짜를 표시\r\nfunction formatTimeDifference(pubDate) {\r\n    // 기사 게시 날짜를 Date 객체로 변환\r\n    const publishedDate = new Date(pubDate);\r\n    const now = new Date(); // 현재 시간\r\n\r\n    // 날짜 비교를 위해 게시 날짜와 현재 날짜의 연/월/일을 각각 추출\r\n    const publishedYear = publishedDate.getFullYear();\r\n    const publishedMonth = publishedDate.getMonth();\r\n    const publishedDay = publishedDate.getDate();\r\n\r\n    const currentYear = now.getFullYear();\r\n    const currentMonth = now.getMonth();\r\n    const currentDay = now.getDate();\r\n\r\n    // 오늘 날짜인지 확인\r\n    if (\r\n        publishedYear === currentYear &&\r\n        publishedMonth === currentMonth &&\r\n        publishedDay === currentDay\r\n    ) {\r\n        // 오늘 날짜일 경우 시간 차이를 계산\r\n        const diffInMs = now - publishedDate; // 현재 시간과의 밀리초 단위 차이 계산\r\n        const diffInMinutes = Math.floor(diffInMs / 60000); // 분 단위로 변환\r\n\r\n        if (diffInMinutes < 1) return '방금 전'; // 1분 미만이면 \"방금 전\" 반환\r\n        if (diffInMinutes < 60) return `${diffInMinutes}분 전`; // 1시간 미만이면 \"N분 전\" 반환\r\n\r\n        const diffInHours = Math.floor(diffInMinutes / 60); // 시간 단위로 변환\r\n        return `${diffInHours}시간 전`; // \"N시간 전\" 반환\r\n    } else {\r\n        // 오늘 날짜가 아니면 MM.DD 형식으로 날짜를 반환\r\n        return `${publishedDate.getMonth() + 1}.${publishedDate.getDate()}`;\r\n    }\r\n}\r\n\r\n/********************************************/\r\n\r\n\r\n/*************** 메인 페이지 컴포넌트 ***************/\r\n// 메인 페이지는 기사 검색, 기사 리스트 표시, 더 보기 버튼 등의 기능을 포함\r\nfunction MainPage() {\r\n    // 뉴스 데이터를 저장할 상태\r\n    const [news, setNews] = useState([]);\r\n\r\n    // 현재 페이지를 저장할 상태 (기본값: 1)\r\n    const [page, setPage] = useState(1);\r\n\r\n    // 한 번에 가져올 기사 수\r\n    const displayCount = 36;\r\n\r\n    // 사용자가 입력한 검색어를 저장할 상태\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    /*************** 뉴스 데이터 가져오기 함수 ***************/\r\n    // 특정 페이지와 검색어를 기반으로 뉴스 데이터를 가져옴\r\n    const fetchNews = (currentPage, query) => {\r\n        // API 요청 시 시작 인덱스를 계산\r\n        const start = (currentPage - 1) * displayCount + 1;\r\n\r\n        // 검색어가 없으면 기본값으로 'default'를 사용\r\n        const searchTerm = query ? query : 'default';\r\n\r\n        // 뉴스 API 호출\r\n        axios\r\n            .get(`http://localhost:8080/searchNews?query=${searchTerm}&display=${displayCount}&start=${start}`)\r\n            .then((response) => {\r\n                // API 응답 데이터 확인 (디버깅용)\r\n                // console.log('API 응답 데이터:', response.data);\r\n\r\n                // 응답 데이터에서 pubDate를 포맷팅하여 새로운 배열 생성\r\n                const processedNews = response.data.items.map((item) => ({\r\n                    ...item,\r\n                    formattedPubDate: formatTimeDifference(item.pubDate), // pubDate를 포맷팅하여 추가\r\n                }));\r\n\r\n                // 포맷팅된 데이터를 상태로 저장\r\n                setNews(processedNews);\r\n            })\r\n            .catch(error => {\r\n                // API 호출 중 에러가 발생한 경우 콘솔에 출력\r\n                console.error('Error fetching news:', error);\r\n            });\r\n    };\r\n\r\n    /*************** 페이지 변경 및 검색어 변경 시 데이터 로드 ***************/\r\n    // 페이지 번호나 검색어가 변경될 때마다 fetchNews 호출\r\n    useEffect(() => {\r\n        fetchNews(page, searchQuery); // 검색어와 현재 페이지를 기반으로 데이터 요청\r\n    }, [page, searchQuery]);\r\n\r\n    /*************** 검색 버튼 클릭 이벤트 ***************/\r\n    // 검색 버튼을 클릭했을 때 호출\r\n    const handleSearch = () => {\r\n        setNews([]); // 기존 뉴스 데이터를 초기화\r\n        setPage(1); // 페이지를 초기화\r\n        const query = searchQuery.trim() === '' ? 'default' : searchQuery; // 검색어가 비어 있으면 기본값 'default'로 설정\r\n        fetchNews(1, query); // 검색 수행\r\n    };\r\n\r\n    /*************** 더 보기 버튼 클릭 이벤트 ***************/\r\n    // 더 보기 버튼 클릭 시 페이지 번호를 증가시켜 추가 데이터를 요청\r\n    const handleLoadMore = () => {\r\n        setPage(prevPage => prevPage + 1); // 페이지 번호를 1 증가\r\n    };\r\n\r\n    /*************** 메인 페이지 렌더링 ***************/\r\n    return (\r\n        <div className=\"MainPage\">\r\n            {/* 헤더 영역 */}\r\n            <div className=\"mainpage-header\">\r\n                {/* 제목 표시 */}\r\n                <h1 className=\"header-title\">\r\n                    <a href='/'\r\n                        style={{\r\n                            textDecoration: 'none', // 링크에 밑줄을 제거\r\n                            color: 'black' // 링크 텍스트 색상 설정\r\n                        }}\r\n                    >News SE</a>\r\n                </h1>\r\n\r\n                {/* 검색창 */}\r\n                <div className=\"search-box\">\r\n                    {/* 입력창 */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"search-text\" // 검색창 스타일 클래스\r\n                        placeholder=\"뉴스 검색\" // 기본 텍스트\r\n                        value={searchQuery} // 입력된 값을 상태와 동기화\r\n                        onChange={(e) => setSearchQuery(e.target.value)} // 입력값 변경 시 상태 업데이트\r\n                    />\r\n                    {/* 돋보기 버튼 */}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"search-button\" // 돋보기 버튼 스타일 클래스\r\n                        onClick={handleSearch} // 클릭 시 handleSearch 호출\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* 본문 영역 */}\r\n            <div className=\"mainpage_body\">\r\n                {news.map((item, index) => (\r\n                    <div key={index}>\r\n                        {/* 기사 제목을 클릭하면 상세 페이지로 이동 */}\r\n                        <Link\r\n                            to=\"/extra-page\" // 이동할 경로\r\n                            state={{\r\n                                title: item.title, // 기사 제목 전달\r\n                                description: item.description, // 기사 요약 전달\r\n                                link: item.link, // 기사 링크 전달\r\n                            }}\r\n                            style={{\r\n                                textDecoration: 'none', // 밑줄 제거\r\n                                color: 'black', // 텍스트 색상\r\n                                fontWeight: 'bold', // 굵은 글씨\r\n                            }}\r\n                        >\r\n                            <h2>{item.title}</h2>\r\n                        </Link>\r\n                        {/* 기사 시간 표시 */}\r\n                        <p>{item.formattedPubDate}</p>\r\n                        {/* 기사 원문 링크 */}\r\n                        <a\r\n                            href={item.link}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            style={{ textDecoration: 'none', color: 'blue' }} // 스타일 설정\r\n                        >기사 원문 보러가기</a>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* 푸터 영역 */}\r\n            <div className=\"mainpage_footer\">\r\n                {/* 더 보기 버튼 */}\r\n                <button onClick={handleLoadMore}>기사 더보기</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}